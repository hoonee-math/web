html은 정적이다. 한번 화면에 출력되면 언제나 그 모습 그대로임.

모바일이나 데스크탑에서 실행되는 다양한 프로그램들 예를 들면 게임들은 사용자와 상호작용하길 원했다 -> 이래서 탄생하넥 javasctipt

이제 web은 html을 이용해서 웹 페이즈를 우선 만든 후에

그렇게 만들어진 웹 페이즈를 자바 스크립트를 이용해서 사용자와 상호작용할 수 있도록 기능을 추가함으로써

html의 정보와 자바스크립트의 기능을 전부 갖춘 전무후무한 유일무이한 시스템으로 성장함!



예를 들어


#29
자주쓰이는 코드를 함수로 빼서 사용
비슷하지만 서로 다른 함수들이 불어나면 함수를 그룹핑하여 객체와 메서드로 만들기
예를 들어 Body태그 전체에 사용되는 함수들을 묶어서 담아둘 폴더인 객체를 만들고,
그 객체에 함수들을 담는데, 객체 안에 들어있는 함수는 더 이상 함수라고 부르지 않고, 메서드라고 부름.

#30
배열: 정보를 담는 그릇, 정보가 순서대로 저장
객체: 순서없이 저장되는 정보

쓰레기통은 꺼낼 필요가 없기 때문에 아무 체계없이 넣어도 됨.
어떤 물건을 수납상자에 넣으면서, 그 물건에 대한 이름과 함께 넣음. 그러면 그 이름으로 꺼낼 수 있음. 객체는 바로 이름이 있는 정리정돈상자.

#31
// for를 쓰면, coworkers라는 변수가 가리키는 객체에 있는 key 값들을 가져오는 반복문! key 값이라고 하는 것은 programmer, designer 와 같은 것들이 key 값! key라고 하는 것은 가져오고 싶은 정보에 도달할 수 있는 열쇠를 key!
      // 배열에서는 순서대로 정리정돈되어있기 때문에 index라는 것을 사용함. key vs index

#32 객체 프로퍼티와 메서드
객체에는 데이터를 담을 수 있음. 지금은 문자를 담았지만, 함수까지도 담을 수 있음.

#36 정리
document 객체 - 웹페이지에 있는 어떤 태그를 삭제하고 싶거나, 어떤 태그에 자식 태그를 삭제하고 싶다면, document 객체를 자세히 살펴보자

DOM 객체 (document Object Model) - document 객체는 DOM의 일부이기 때문에 document객체에서 못찾겠다 싶으면 DOM객체를 조사해보자.

window 객체 - 웹페이지가 아니라 웹브라우저 자체를 제어해야 한다면 window 객체를 조사해 보세요. 현재 열려있는 웹페이지 주소가 뭔지 알아내야 될 수도 있고, 여러분이 새 창을 열어야 될 수도 있고, 또 웹브라우저의 화면 크기를 JavaScript를 통해 알아야 한다면 window 객체에 속해 있는 프로퍼티나 메소드가 여러분을 도울 수 있을 거에요.

ajax - 웹페이지를 리로드하지 않고 정보를 변경하고 싶다면 ajax가 필요할 겁니다. 현대적인 웹앱을 만드는 데 필수적인 테크닉입니다

cookie - 또 웹페이지가 리로드되어도 현재 상태를 유지하고 싶다면 cookie를 배우세요. cookie와 함께라면 사용자를 위한 개인화된 서비스를 제공할 수 있습니다.

offline web application - 인터넷에 끊겨도 동작하는 웹 페이지를 만들고 싶다면 offine web application을 찾아보세요.

webRTC - 화상 통신 웹 앱을 만들고 싶다구요?

speech - 또 사용자의 음성을 인식하고 음성으로 정보를 전달하고 싶다면

webGL - 또 3차원 그래픽으로 게임과 같은 것을 만들고 싶다면

webVR - 가상현실에 관심이 많으시다구요?
